/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculadora;

import static java.lang.Double.parseDouble;

/**
 *
 * @author FP
 */
public class Calculadora extends javax.swing.JFrame {

    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLOperacion = new javax.swing.JLabel();
        jBCE = new javax.swing.JButton();
        jBC = new javax.swing.JButton();
        jBPorcentaje = new javax.swing.JButton();
        jBRetroceso = new javax.swing.JButton();
        jBBinario = new javax.swing.JButton();
        jBCuadrado = new javax.swing.JButton();
        jBRaiz = new javax.swing.JButton();
        jBDividir = new javax.swing.JButton();
        jB7 = new javax.swing.JButton();
        jB8 = new javax.swing.JButton();
        jB9 = new javax.swing.JButton();
        jBMultiplicar = new javax.swing.JButton();
        jB4 = new javax.swing.JButton();
        jB6 = new javax.swing.JButton();
        jB5 = new javax.swing.JButton();
        jBRestar = new javax.swing.JButton();
        jB1 = new javax.swing.JButton();
        jB2 = new javax.swing.JButton();
        jB3 = new javax.swing.JButton();
        jBSumar = new javax.swing.JButton();
        jBInvertir = new javax.swing.JButton();
        jB0 = new javax.swing.JButton();
        jBFloat = new javax.swing.JButton();
        jBResultado = new javax.swing.JButton();
        jTResultado = new javax.swing.JTextField();
        jLSigno = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora");
        setMaximumSize(new java.awt.Dimension(333, 458));
        setMinimumSize(new java.awt.Dimension(333, 458));
        setResizable(false);
        setSize(new java.awt.Dimension(333, 458));

        jLOperacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jBCE.setBackground(new java.awt.Color(204, 204, 204));
        jBCE.setText("CE");
        jBCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCEActionPerformed(evt);
            }
        });

        jBC.setBackground(new java.awt.Color(204, 204, 204));
        jBC.setText("C");
        jBC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCActionPerformed(evt);
            }
        });

        jBPorcentaje.setBackground(new java.awt.Color(204, 204, 204));
        jBPorcentaje.setText("%");
        jBPorcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPorcentajeActionPerformed(evt);
            }
        });

        jBRetroceso.setBackground(new java.awt.Color(204, 204, 204));
        jBRetroceso.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jBRetroceso.setText("Â«");
        jBRetroceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRetrocesoActionPerformed(evt);
            }
        });

        jBBinario.setBackground(new java.awt.Color(204, 204, 204));
        jBBinario.setText("Bin");
        jBBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBinarioActionPerformed(evt);
            }
        });

        jBCuadrado.setBackground(new java.awt.Color(204, 204, 204));
        jBCuadrado.setText("x2");
        jBCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCuadradoActionPerformed(evt);
            }
        });

        jBRaiz.setBackground(new java.awt.Color(204, 204, 204));
        jBRaiz.setText("raiz");
        jBRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRaizActionPerformed(evt);
            }
        });

        jBDividir.setBackground(new java.awt.Color(204, 204, 204));
        jBDividir.setText("/");
        jBDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDividirActionPerformed(evt);
            }
        });

        jB7.setText("7");
        jB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB7ActionPerformed(evt);
            }
        });

        jB8.setText("8");
        jB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB8ActionPerformed(evt);
            }
        });

        jB9.setText("9");
        jB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB9ActionPerformed(evt);
            }
        });

        jBMultiplicar.setBackground(new java.awt.Color(204, 204, 204));
        jBMultiplicar.setText("x");
        jBMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMultiplicarActionPerformed(evt);
            }
        });

        jB4.setText("4");
        jB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB4ActionPerformed(evt);
            }
        });

        jB6.setText("6");
        jB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB6ActionPerformed(evt);
            }
        });

        jB5.setText("5");
        jB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB5ActionPerformed(evt);
            }
        });

        jBRestar.setBackground(new java.awt.Color(204, 204, 204));
        jBRestar.setText("-");
        jBRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRestarActionPerformed(evt);
            }
        });

        jB1.setText("1");
        jB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB1ActionPerformed(evt);
            }
        });

        jB2.setText("2");
        jB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB2ActionPerformed(evt);
            }
        });

        jB3.setText("3");
        jB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB3ActionPerformed(evt);
            }
        });

        jBSumar.setBackground(new java.awt.Color(204, 204, 204));
        jBSumar.setText("+");
        jBSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSumarActionPerformed(evt);
            }
        });

        jBInvertir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBInvertir.setText("+/-");
        jBInvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInvertirActionPerformed(evt);
            }
        });

        jB0.setText("0");
        jB0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB0ActionPerformed(evt);
            }
        });

        jBFloat.setText(",");

        jBResultado.setBackground(new java.awt.Color(41, 99, 218));
        jBResultado.setForeground(new java.awt.Color(255, 255, 255));
        jBResultado.setText("=");
        jBResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBResultadoActionPerformed(evt);
            }
        });

        jTResultado.setEditable(false);
        jTResultado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTResultado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTResultado.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTResultado)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBBinario, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBCE, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBRaiz, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jBC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jB4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jB3, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                    .addComponent(jB6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jB9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBInvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jB0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBFloat, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBSumar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBRestar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBDividir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBMultiplicar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBRetroceso, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLSigno, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLSigno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBC, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBRetroceso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBBinario, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBRaiz, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBMultiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBRestar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSumar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBFloat, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jB0, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBInvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBPorcentajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPorcentajeActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            numero = Double.parseDouble(resultado);
            Double porcentaje = numero / 100;

            resultado = porcentaje.toString();
            jTResultado.setText(resultado);
        }
    }//GEN-LAST:event_jBPorcentajeActionPerformed

    private void jBCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCEActionPerformed
        resultado = "";
        jTResultado.setText("0");
    }//GEN-LAST:event_jBCEActionPerformed

    private void jBCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCActionPerformed
        resultado = "";
        jLOperacion.setText("");
        jTResultado.setText("0");
        memoria = "";
        jLSigno.setText("");
    }//GEN-LAST:event_jBCActionPerformed

    private void jBRetrocesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRetrocesoActionPerformed
        if (jTResultado.getText().length() == 1) {
            jTResultado.setText("0");
            resultado = "";
        }
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            jTResultado.setText(resultado.substring(0, resultado.length() - 1));
            resultado = resultado.substring(0, resultado.length() - 1);
        }
    }//GEN-LAST:event_jBRetrocesoActionPerformed

    private void jBBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBinarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBBinarioActionPerformed

    private void jBInvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInvertirActionPerformed
        //menos
        if ((resultado != "")) {
            if (resultado.charAt(0) == '-') {
                resultado = resultado.substring(1, resultado.length());
                jTResultado.setText(resultado);
            } else {
                resultado = "-" + resultado;
                jTResultado.setText(resultado);
            }
        }
        /*if (resultado.charAt(0) == '-') {
            resultado = resultado.substring(1, resultado.length()-1);
        } else if (resultado.isBlank()) {
            resultado = resultado;
        }else{
            resultado = "-"+resultado;
        }*/
    }//GEN-LAST:event_jBInvertirActionPerformed

    private void jB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB1ActionPerformed
        resultado += jB1.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB1ActionPerformed

    private void jB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB2ActionPerformed
        resultado += jB2.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();

    }//GEN-LAST:event_jB2ActionPerformed

    private void jB0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB0ActionPerformed
        if (resultado != "") {
            resultado += jB0.getText();
            //jTResultado.setText(resultado);
            punto++;
            mostrarPantalla();
        }
    }//GEN-LAST:event_jB0ActionPerformed

    private void jB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB3ActionPerformed
        resultado += jB3.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB3ActionPerformed

    private void jB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB4ActionPerformed
        resultado += jB4.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB4ActionPerformed

    private void jB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB5ActionPerformed
        resultado += jB5.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB5ActionPerformed

    private void jB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB6ActionPerformed
        resultado += jB6.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB6ActionPerformed

    private void jB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB7ActionPerformed
        resultado += jB7.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB7ActionPerformed

    private void jB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB8ActionPerformed
        resultado += jB8.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB8ActionPerformed

    private void jB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB9ActionPerformed
        resultado += jB9.getText();
        //jTResultado.setText(resultado);
        punto++;
        mostrarPantalla();
    }//GEN-LAST:event_jB9ActionPerformed

    private void jBSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSumarActionPerformed

        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            memoria = resultado;
            jLOperacion.setText(memoria);
            resultado = "";
            jTResultado.setText("0");
            jLSigno.setText("+");
        }


    }//GEN-LAST:event_jBSumarActionPerformed

    private void jBCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCuadradoActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            numero = Double.parseDouble(resultado);
            Double cuadrado = Math.pow(numero, 2);

            resultado = cuadrado.toString();
            jTResultado.setText(resultado);
        }
    }//GEN-LAST:event_jBCuadradoActionPerformed

    private void jBResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBResultadoActionPerformed
        Double calculo;
        switch (jLSigno.getText()) {
            case "+":
                calculo = Double.parseDouble(memoria) + Double.parseDouble(resultado);
                resultado = calculo.toString();
                mostrarPantalla();
                //jTResultado.setText(resultado);
                jLSigno.setText("");
                jLOperacion.setText("");
                break;
            case "-":
                calculo = Double.parseDouble(memoria) - Double.parseDouble(resultado);
                resultado = calculo.toString();
                mostrarPantalla();
                //jTResultado.setText(resultado);
                jLSigno.setText("");
                jLOperacion.setText("");
                break;
            case "x":
                calculo = Double.parseDouble(memoria) * Double.parseDouble(resultado);
                resultado = calculo.toString();
                mostrarPantalla();
                //jTResultado.setText(resultado);
                jLSigno.setText("");
                jLOperacion.setText("");
                break;
            case "/":
                calculo = Double.parseDouble(memoria) / Double.parseDouble(resultado);
                resultado = calculo.toString();
                mostrarPantalla();
                //jTResultado.setText(resultado);
                jLSigno.setText("");
                jLOperacion.setText("");
                break;
        }
        memoria = "";


    }//GEN-LAST:event_jBResultadoActionPerformed

    private void jBRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRestarActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            memoria = resultado;
            jLOperacion.setText(memoria);
            resultado = "";
            jTResultado.setText("0");
            jLSigno.setText("-");
        }

    }//GEN-LAST:event_jBRestarActionPerformed

    private void jBMultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMultiplicarActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            memoria = resultado;
            jLOperacion.setText(memoria);
            resultado = "";
            jTResultado.setText("0");
            jLSigno.setText("x");
        }

    }//GEN-LAST:event_jBMultiplicarActionPerformed

    private void jBDividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDividirActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            memoria = resultado;
            jLOperacion.setText(memoria);
            resultado = "";
            jTResultado.setText("0");
            jLSigno.setText("/");
        }

    }//GEN-LAST:event_jBDividirActionPerformed

    private void jBRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRaizActionPerformed
        if (!(jTResultado.getText().charAt(0) == '0' && jTResultado.getText().length() == 1)) {
            numero = Double.parseDouble(resultado);
            Double cuadrado = Math.sqrt(numero);

            resultado = cuadrado.toString();
            //jTResultado.setText(resultado);
            mostrarPantalla();
        }

    }//GEN-LAST:event_jBRaizActionPerformed

    /**
     * @param args the command line arguments
     */
    private void mostrarPantalla() {
        String noDecimal = "";
        if (resultado.contains(".")) {
            if (resultado.indexOf('.') == resultado.length() - 2 && resultado.charAt(resultado.length() - 1) == '0') {
                //jTResultado.setText(resultado.substring(0,resultado.length()-2));
                resultado = resultado.substring(0, resultado.length() - 2);
                //System.out.println(resultado.indexOf('.'));
                noDecimal = resultado;
            } else {
                noDecimal = resultado.substring(0, resultado.indexOf("."));
            }
        } else {
            noDecimal = resultado;
        }

        String cadenaResultado = "";
        String cadenaResultadoInvertida = "";
        if (noDecimal.length() > 3) {
            int acumulador = 0;
            for (int i = 0; i < noDecimal.length(); i++) {
                if (acumulador == 2) {
                    cadenaResultado += noDecimal.charAt(noDecimal.length()-1-i) + ".";
                    acumulador = 0;
                } else {
                    cadenaResultado += noDecimal.charAt(noDecimal.length()-1-i);
                    acumulador++;
                }

            }

            if (cadenaResultado.charAt(cadenaResultado.length() - 1) == '.') {
                cadenaResultado = cadenaResultado.substring(0, cadenaResultado.length() - 1);
            }

        }
        // FALTA INVERTIR LA CADENA Y CONCATENARLA CON LOS DECIMALES PARA MOSTRARLA Y LO TIENES CLEAN
        for (int i = 0; i < cadenaResultado.length(); i++) {
            cadenaResultadoInvertida+=cadenaResultado.charAt(cadenaResultado.length()-1-i);
        }
        
        
        
        
        //jTResultado.setText(resultado);
        if (cadenaResultadoInvertida.length()==0) {
            jTResultado.setText(resultado);
        }else{
            if (resultado.contains(".")) {
            jTResultado.setText(cadenaResultadoInvertida+resultado.substring(resultado.indexOf("."), resultado.length()-1));
        }else{
            jTResultado.setText(cadenaResultadoInvertida);
        }
        }
        
        //jTResultado.setText(cadenaResultadoInvertida);
        //System.out.println(cadenaResultado);
        //System.out.println(cadenaResultadoInvertida);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }
    private double numero;
    private String resultado = "";
    private String memoria;
    private int punto = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB0;
    private javax.swing.JButton jB1;
    private javax.swing.JButton jB2;
    private javax.swing.JButton jB3;
    private javax.swing.JButton jB4;
    private javax.swing.JButton jB5;
    private javax.swing.JButton jB6;
    private javax.swing.JButton jB7;
    private javax.swing.JButton jB8;
    private javax.swing.JButton jB9;
    private javax.swing.JButton jBBinario;
    private javax.swing.JButton jBC;
    private javax.swing.JButton jBCE;
    private javax.swing.JButton jBCuadrado;
    private javax.swing.JButton jBDividir;
    private javax.swing.JButton jBFloat;
    private javax.swing.JButton jBInvertir;
    private javax.swing.JButton jBMultiplicar;
    private javax.swing.JButton jBPorcentaje;
    private javax.swing.JButton jBRaiz;
    private javax.swing.JButton jBRestar;
    private javax.swing.JButton jBResultado;
    private javax.swing.JButton jBRetroceso;
    private javax.swing.JButton jBSumar;
    private javax.swing.JLabel jLOperacion;
    private javax.swing.JLabel jLSigno;
    private javax.swing.JTextField jTResultado;
    // End of variables declaration//GEN-END:variables
}
